
from scapy.sendrecv import AsyncSniffer

from flow_session import generate_session_class
from os.path import dirname, join

def create_sniffer(
    input_file, input_interface, output_mode, output_file, url_model=None
):
    assert (input_file is None) ^ (input_interface is None)

    NewFlowSession = generate_session_class(output_mode, output_file, url_model)

    if input_file is not None:
        return AsyncSniffer(
            offline=input_file,
            filter="ip and (tcp or udp)",
            prn=None,
            session=NewFlowSession,
            store=False,
        )
    else:
        return AsyncSniffer(
            iface=input_interface,
            filter="ip and (tcp or udp)",
            prn=None,
            session=NewFlowSession,
            store=False,
        )


def main():
    inputf = join(dirname(__file__),"../../../../files/dumps/dump.pcap")
    inputint = None
    outputmod = "flow"
    outputpa = join(dirname(__file__),"../../../../files/dumps/dump.csv")
    mode = None

    
    sniffer = create_sniffer(
        inputf,
        inputint,
        outputmod,
        outputpa,
        mode,
    )
    sniffer.start()

    try:
        sniffer.join()
    except KeyboardInterrupt:
        sniffer.stop()
    finally:
        sniffer.join()


if __name__ == "__main__":
    main()
