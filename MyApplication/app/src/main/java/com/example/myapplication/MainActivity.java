package com.example.myapplication;

import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.AdapterView;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import android.widget.Toast;

import androidx.activity.result.ActivityResult;
import androidx.activity.result.ActivityResultLauncher;
import androidx.activity.result.contract.ActivityResultContracts;
import androidx.appcompat.app.AppCompatActivity;
import androidx.activity.ComponentActivity;
import android.content.Intent;
import android.os.Bundle;
import androidx.appcompat.app.AppCompatActivity;
import java.util.List;



public class MainActivity extends AppCompatActivity {  //Main Activity

    static final String PCAPDROID_PACKAGE = "com.emanuelef.remote_capture"; // add ".debug" for the debug build of PCAPdroid
    static final String CAPTURE_CTRL_ACTIVITY = "com.emanuelef.remote_capture.activities.CaptureCtrl";
    //CLASS VARIABLES
    ListView listView;   //list view
    TextView text;       //label
    Button BTN1_main;    //Button for Showing list of application
    Button BTN2_main;    //Button for Start capturing selected application
    Button BTN3_main;    // button for stop capturing

    boolean mCaptureRunning = false;

    private final ActivityResultLauncher<Intent> captureLauncher =
            registerForActivityResult(new ActivityResultContracts.StartActivityForResult(), this::handleCaptureResult);
    private final ActivityResultLauncher<Intent> captureStopLauncher =
            registerForActivityResult(new ActivityResultContracts.StartActivityForResult(), this::handleCaptureStopResult);
    //private final ActivityResultLauncher<Intent> captureStatusLauncher =
            //registerForActivityResult(new ActivityResultContracts.StartActivityForResult(), this::handleCaptureStatusResult);

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // initialise layout  , Setting variables with their IDs from the XML
        listView = findViewById(R.id.listview);
        text = findViewById(R.id.totalapp);
        BTN1_main = findViewById(R.id.check);
        BTN2_main = findViewById(R.id.check2);
        BTN3_main = findViewById(R.id.check3);
    }


    public void oNCaptureClick(View view){
        String applicationtobecapture = text.getText().toString();
        if(applicationtobecapture.startsWith("com")) {
            //YourActivity Cap = new YourActivity();
            startCapture(applicationtobecapture);

        }
    else{ Toast.makeText(this, "please pick an application :)", Toast.LENGTH_SHORT).show();}
    }


    void startCapture(String uri) {
        Toast.makeText(this, "Capture started", Toast.LENGTH_SHORT).show();
        BTN2_main.setVisibility(View.INVISIBLE);
        BTN3_main.setVisibility(View.VISIBLE);
        listView.setVisibility(View.INVISIBLE);
        Toast.makeText(this, "Capture started", Toast.LENGTH_SHORT).show();
        Intent intent = new Intent(Intent.ACTION_VIEW);
        intent.setClassName(PCAPDROID_PACKAGE, "com.emanuelef.remote_capture.activities.CaptureCtrl");
        intent.putExtra("action", "start");
        intent.putExtra("pcap_dump_mode", "pcap_file");
        intent.putExtra("app_filter", uri);
        intent.putExtra("pcap_uri","file:///data/user/0/com.emanuelef.remote_capture/cache/dump.pcap");
        intent.putExtra("max_dump_size",157286400); //150 MB
        captureLauncher.launch(intent);

    }


    void handleCaptureResult(final ActivityResult result) {
        if (result.getResultCode() == RESULT_OK) {
            // command executed successfully

            Toast.makeText(this, "Capturing...", Toast.LENGTH_SHORT).show();
        }
    }

    public void stopCapture(View v) {
        Log.d("-", "Stopping PCAPdroid");
        Toast.makeText(this, "stopping capturing", Toast.LENGTH_SHORT).show();
        Intent intent = new Intent(Intent.ACTION_VIEW);
        intent.setClassName(PCAPDROID_PACKAGE, CAPTURE_CTRL_ACTIVITY);
        intent.putExtra("action", "stop");
        captureStopLauncher.launch(intent);
        BTN2_main.setVisibility(View.VISIBLE);
        BTN3_main.setVisibility(View.INVISIBLE);
        listView.setVisibility(View.VISIBLE);
    }

    void handleCaptureStopResult(final ActivityResult result) {
        Log.d("-", "PCAPdroid stop result: " + result);

        if(result.getResultCode() == RESULT_OK) {
            Toast.makeText(this, "Capture stopped!", Toast.LENGTH_SHORT).show();
            //  setCaptureRunning(false);
        } else
            Toast.makeText(this, "Could not stop capture", Toast.LENGTH_SHORT).show();
    }


    public void GetAppsList(View view) {  //THIS FUNCTION GETS THE APPS AND PUT THEM IN A LIST

        // get list of all the apps installed
        List<ApplicationInfo> infos = getPackageManager().getInstalledApplications(0);
        // create a list with size of total number of apps
        String[] apps = new String[infos.size()];
        int i = 0;
        // add all the app name in string list
        for (ApplicationInfo info : infos) {
            apps[i] = info.packageName;
            i++;
        }
        // set all the apps name in list view
        listView.setAdapter(new ArrayAdapter<String>(MainActivity.this, android.R.layout.simple_list_item_1, apps));
        // write total count of apps available.
        text.   setText(infos.size() + " Apps are installed");

        BTN1_main.setVisibility(View.GONE);  //HIDING THE BUTTON WHEN PRESSED
        BTN2_main.setVisibility(View.VISIBLE); //SHOWING THE OTHER BUTTON
        BTN3_main.setVisibility(View.GONE);  // stop  capture
        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() {  //WHAT WILL HAPPEN WHEN AN ITEM CLICKED

            @Override
            public void onItemClick(AdapterView<?> adapterView, View view, int position, long arg3) {
                text.setText(listView.getItemAtPosition(position).toString()); //SET THE LABEL TO THE ITEM SELECTED
            }

        });
    }

    @Override
    protected void onStart() {
        super.onStart();

    }
}